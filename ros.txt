locale = "utf-8"

sudo apt install git-all

apt-cache policy | grep universe

source /opt/ros/humble/setup.bash

~/.bashrc (find appell bevore each command line

ros2 run demo_nodes_cpp talker
ros2 run demo_nodes_cpp listener

rqt-graph

ros2 run turtlesim turtlesim_node

python

sudo apt install python3-colcon-common-extensions
source  /usr/share/colcon_argcomplete/hook/colcon-argcomplete.bash

making work space

sudo mkdir -p ~/ros2_ws(nb)/src 
cd ~/ros2_ws(nb)

source /usr/share/colcon_cd/function/colcon_cd.sh
export _colcon_cd_root=/opt/ros/humble/
source /usr/share/colcon_argcomplete/hook/colcon-argcomplete.bash
sudo colcon build

source ~/ros2_ws/install/setup.bash

creating srcpackages and build it

cd src
ros2 pkg list  : montre la liste de tous les packages accesible depuis l'ordi
ros2 pkg create packagename(ex my_robot_controller) --buld-type ament_cmake/ament_python --dependencies mydependencies(ex rclpy)

cd .. colcon build
error: sudo apt install python3-pip 
pip3 list | grep setuptools  :  see version not 58.2.0
pip3 install setuptools==58.2.0

create first node
cd src/name/name
touch my_first_node.py
chmod +x my_first_node.py

you can add ros extension in vscode to have the autocomplation etc

colcon run foldername nodenam
colcon build --symlink-install -> make automatic update
if error source ./bashrc
if error with other folder modify path env export pathnaeme=...:...

ros2 topic show (topicname)
ros2 interface show (name)
ros2 topic echo (name)
ros2 topic hz (name)

ros2 service list
ros2 service call (name) "{'var' : val, 'var2' : val2}"
ros2 service type (name)
ros2 interface show (name)


managing packages

sudo apt-get install python3-rosdep
sudo rosdep init
rosdep update
https://github.com/ros/rosdistro/blob/master/humble/distribution.yaml





